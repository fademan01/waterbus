name: Analyze, Build, Release APK

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: ðŸ›  Analyze project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          cache: true
      - run: flutter pub get
      - run: flutter analyze

  build_apk:
    needs: [test]
    name: ðŸ”§ Build & ðŸ“¦ Release APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          cache: true
      - run: flutter clean
      - run: flutter pub get
      - name: ðŸ”§ Build APK
        env:
          KEY_JKS: ${{ secrets.KEY_JKS }}
          KEY_WATERBUS_PASSWORD: ${{ secrets.KEY_WATERBUS_PASSWORD }}
          ALIAS_WATERBUS_PASSWORD: ${{ secrets.ALIAS_WATERBUS_PASSWORD }}
        run: base64 -d <<< $KEY_JKS > ./android/app/waterbus.jks && flutter build apk --release -v
      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          name: "Waterbus ${{ github.ref_name }}"
          bodyFile: "RELEASE.md"
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.TOKEN }}
